count(word, sort = TRUE)
tidy_books %>%
count(word, sort = TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
library(ggplot2)
tidy_books %>%
count(word, sort = TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_books %>%
count(word, sort = TRUE) %>%
filter(n > 600) %>%
#mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_books %>%
count(word, sort = TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
library(gutenbergr)
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
install.packages('gutenbergr')
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
# Download new texts
library(gutenbergr)
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
tidy_hgwells <- hgwells %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_hgwells %>%
count(word, sort = TRUE)
bronte <- gutenberg_download(c(1260, 768, 969, 9182, 767))
tidy_bronte <- bronte %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_bronte %>%
count(word, sort = TRUE)
library(tidyr)
?mutate
frequency <- bind_rows(mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen"))
frequency
library(tidyr)
frequency <- bind_rows(mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Brontë Sisters`:`H.G. Wells`)
frequency
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Jane Austen`, color = abs(`Jane Austen` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Jane Austen", x = NULL)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "H.G. Wells",],
~ proportion + `Jane Austen`)
library(tidytext)
sentiments
sentiments[1:50, ]
?tibble
sentiments
unique(sentiments$lexicon)
filter(sentiments, lexion = "nrc")
filter(sentiments, lexion == "nrc")
filter(sentiments, lexicon == "nrc")
filter(sentiments, lexicon == "bing")
filter(sentiments, lexicon == "loughran")
filter(sentiments, lexicon == "AFINN")
get_sentiments("afinn")
get_sentiments("nrc")
library(SparkR)
(SparkR)
?install.spark
??install.spark
install.spark()
sc <- sparkR.init(master="local")
sc <- sparkR.session(master="local")
?sparkR.session
sc <- sparkR.session(master = "local")
# Run package and initialize Spark
library(SparkR)
sc <- spark.session(master = "local[1]")
sc <- sparkR.session(master = "local[1]")
sc <- sparkR.session()
list.files(file.path(Sys.getenv("SPARK_HOME"), "R", "lib"))
.libPaths(c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib"), .libPaths()))
sc <- sparkR.session()
sparkEnvir <- list(spark.executor.instance = '10',
spark.yarn.executor.memoryOverhead = '8000')
sc <- sparkR.session(
sparkEnvir = sparkEnvir,
sparkPackages = "com.databricks:spark-csv_2.10:1.3.0"
)
SPARK_HOME
Sys.getenv(SPARK_HOME)
Sys.setenv(SPARK_HOME = "C:/Spark/spark-2.1.1-bin-hadoop2.7")
?randomForest
library(randomForest)
?randomForest
install.packages("plotROC")
library(ggplot2)
library(plotROC)
D.ex <- rbinom(200, size = 1, prob = .5)
M1 <- rnorm(200, mean = D.ex, sd = .65)
M2 <- rnorm(200, mean = D.ex, sd = 1.5)
test <- data.frame(D = D.ex, D.str = c("Healthy", "Ill")[D.ex + 1],
M1 = M1, M2 = M2, stringsAsFactors = FALSE)
# The Roc Geom
# Next I use the ggplot function to define the aesthetics, and
# the geom_roc function to add an ROC curve layer.
basicplot <- ggplot(test, aes(d = D, m = M1)) + geom_roc()
basicplot
View(test)
?geom_roc
install.packages("KernSmoothR")
install.packages("KernSmooth")
library(KernSmooth)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
Diet
BodyWeight
ibrary(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
g <- ggplot(movies, aes(votes, rating))
library(datasets)
movies
data(movies)
g <- qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
print(g)
ggplot(airquality, aes(Wind, Ozone))
qplot(votes, rating, data = movies)
swirl
swirl()
library(swirl)
install.packages('swirl')
swirl
swirl()
library(swirl)
swirl()
dataFrame
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "blue")
abline(h = 0.4, col = "red")
5
12
abline(h = 0.05, col = "green")
View(dFsm)
dist(dFsm)
plot(hc)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
point(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
point(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2))
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, wchi.min)
apply(distTmp, 2, which.min)
?histogram
?hist
quit()
library(tidyverse)
# reading in data
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
# plot3
baltimore_types <- NEI %>%
filter(fips == 24510, year %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
group_by(year, type) %>%
summarise(sums = sum(Emissions))
setwd("C:/Users/wiktor.zdzienicki/OneDrive - ITMAGINATION Sp. z o.o/Prywatny/Exploratory Data Analysis/Projects/Project 2")
library(tidyverse)
# reading in data
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
# plot3
baltimore_types <- NEI %>%
filter(fips == 24510, year %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
group_by(year, type) %>%
summarise(sums = sum(Emissions))
ggplot(baltimore_types) + geom_col(aes(x = type, y = sums, fill = year), position = "dodge") +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
glimpse(NEI)
glimpse(SCC)
table(SCC$Short.Name)
glimpse(SCC)
table(SCC$EI.Sector)
table(SCC$SCC.Level.One)
table(SCC$SCC.Level.Two)
table(SCC$SCC.Level.Three)
glimpse(SCC)
table(SCC$Data.Category)
table(SCC$EI.Sector)
glimpse(SCC)
table(SCC$Short.Name)
glimpse(SCC)
table(SCC$SCC.Level.One)
# plot4
baltimore_types <- NEI %>%
filter(fips == 24510, year %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC')
glimpse(NEI)
glimpse(SCC)
combustion <- NEI %>%
filter(fips == 24510, year %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC')
View(combustion)
# plot4
combustion <- NEI %>%
filter(fyear %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC')
# plot4
combustion <- NEI %>%
filter(year %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC')
View(combustion)
table(combustion$EI.Sector)
table(combustion$SCC.Level.One)
library(stringr)
# plot4
combustion <- NEI %>%
filter(year %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector), "Coal")
# plot4
combustion <- NEI %>%
filter(year %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Coal"))
table(combustion$EI.Sector)
# plot4
combustion <- NEI %>%
filter(year %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Coal")) %>%
group_by(year) %>%
summarise(sums = sum(Emissions))
combustion
ggplot(combustion) + geom_col(aes(x = year, y = sums)) +
ggtitle("Emission of PM2.5 from coal-combustion related sources") + xlab("Year") + ylab("Emission [t]")
ggplot(combustion) + geom_col(aes(x = year, y = sums), col = "darkred") +
ggtitle("Emission of PM2.5 from coal-combustion related sources") + xlab("Year") + ylab("Emission [t]")
ggplot(combustion) + geom_col(aes(x = year, y = sums), fill = "darkred") +
ggtitle("Emission of PM2.5 from coal-combustion related sources") + xlab("Year") + ylab("Emission [t]")
png("plot4.png")
ggplot(combustion) + geom_col(aes(x = year, y = sums), fill = "darkred") +
ggtitle("Emission of PM2.5 from coal-combustion related sources") + xlab("Year") + ylab("Emission [t]")
dev.off()
# plot5
combustion <- NEI %>%
filter(fips == 24510, year %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC')
glimpse(combustion)
table(combustion$EI.Sector)
table(combustion$SCC.Level.One)
# plot5
combustion <- NEI %>%
filter(fips == 24510, year %in% c(1999, 2008)) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles")) %>%
group_by(year) %>%
summarise(sums = sum(Emissions))
ggplot(combustion) + geom_col(aes(x = year, y = sums), fill = "darkred") +
ggtitle("Emission of PM2.5 from motr vehicles") + xlab("Year") + ylab("Emission [t]")
png("plot5.png")
ggplot(combustion) + geom_col(aes(x = year, y = sums), fill = "darkred") +
ggtitle("Emission of PM2.5 from motr vehicles") + xlab("Year") + ylab("Emission [t]")
dev.off()
png("plot5.png")
ggplot(combustion) + geom_col(aes(x = year, y = sums), fill = "darkred") +
ggtitle("Emission of PM2.5 from motor vehicles") + xlab("Year") + ylab("Emission [t]")
dev.off()
# plot2
baltimore <- NEI %>%
filter(fips == 24510) %>%
group_by(year) %>%
summarise(sums = sum(Emissions))
barplot(baltimore$sums, names.arg = baltimore$year, col = "darkred",
main = "Total emission of PM2.5 in Baltimore City", xlab = "Year", ylab = "Emission [t]")
# plot3
baltimore_types <- NEI %>%
filter(fips == 24510) %>%
mutate(year = factor(year)) %>%
group_by(year, type) %>%
summarise(sums = sum(Emissions))
png("plot3.png")
ggplot(baltimore_types) + geom_col(aes(x = type, y = sums, fill = year), position = "dodge") +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
dev.off()
ggplot(baltimore_types) + geom_col(aes(x = type, y = sums, fill = year), position = "dodge") +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
png("plot2.png")
barplot(baltimore$sums, names.arg = baltimore$year, col = "darkred",
main = "Total emission of PM2.5 in Baltimore City", xlab = "Year", ylab = "Emission [t]")
dev.off()
# plot4
combustion <- NEI %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Coal")) %>%
group_by(year) %>%
summarise(sums = sum(Emissions))
ggplot(combustion) + geom_col(aes(x = year, y = sums), fill = "darkred") +
ggtitle("Emission of PM2.5 from coal-combustion related sources") + xlab("Year") + ylab("Emission [t]")
png("plot4.png")
ggplot(combustion) + geom_col(aes(x = year, y = sums), fill = "darkred") +
ggtitle("Emission of PM2.5 from coal-combustion related sources") + xlab("Year") + ylab("Emission [t]")
dev.off()
# plot5
combustion <- NEI %>%
filter(fips == 24510) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles")) %>%
group_by(year) %>%
summarise(sums = sum(Emissions))
ggplot(combustion) + geom_col(aes(x = year, y = sums), fill = "darkred") +
ggtitle("Emission of PM2.5 from motor vehicles") + xlab("Year") + ylab("Emission [t]")
png("plot5.png")
ggplot(combustion) + geom_col(aes(x = year, y = sums), fill = "darkred") +
ggtitle("Emission of PM2.5 from motor vehicles") + xlab("Year") + ylab("Emission [t]")
dev.off()
combustion <- NEI %>%
filter(fips == 24510 | fips == 06037) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles"))
glimpse(compustion)
glimpse(combustion)
table(combustion$fips)
# plot5
comparison <- NEI %>%
filter(fips == 24510 | fips == 06037) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles"))
glimpse(NEI)
comparison <- NEI %>%
filter(fips == 24510) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles")) %>%
group_by(year) %>%
summarise(sums = sum(Emissions))
# plot5
comparison <- NEI %>%
filter(fips == 24510) %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles"))
glimpse(comparison)
table(NEI$fips)
table(comparison$fips)
comparison <- NEI %>%
filter(fips == "24510" | fips = "06037") %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles"))
comparison <- NEI %>%
filter(fips == "24510" | fips = "06037") %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles"))
glimpse(NEI)
# plot5
comparison <- NEI %>%
filter(fips == "24510" | fips == "06037") %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles"))
comparison <- NEI %>%
filter(fips == "24510" | fips == "06037") %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles")) %>%
mutate(fips = recode("Baltimore" = "24510", "LA" = "06037"))
comparison <- NEI %>%
filter(fips == "24510" | fips == "06037") %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles")) %>%
mutate(fips = recode(fips, "24510" = "Baltimore", "06037" = "LA"))
table(NEI$fips)
table(comparison$fips)
comparison <- NEI %>%
filter(fips == "24510" | fips == "06037") %>%
mutate(year = factor(year)) %>%
inner_join(SCC, by = 'SCC') %>%
filter(str_detect(EI.Sector, "Vehicles")) %>%
mutate(fips = recode(fips, "24510" = "Baltimore", "06037" = "LA")) %>%
group_by(year, fips) %>%
summarise(sums = sum(Emissions))
ggplot(comparison) + geom_col(aes(x = year, y = sums), fill = "darkred") +
ggtitle("Emission of PM2.5 from motor vehicles") + xlab("Year") + ylab("Emission [t]")
ggplot(comparison) + geom_col(aes(x = year, y = sums, fill = fips), position = "dodge") +
ggtitle("Emission of PM2.5 from motor vehicles") + xlab("Year") + ylab("Emission [t]")
ggplot(comparison) + geom_col(aes(x = fips, y = sums, fill = year), position = "dodge") +
ggtitle("Emission of PM2.5 from motor vehicles") + xlab("Year") + ylab("Emission [t]")
comparison
png("plot6.png")
ggplot(comparison) + geom_col(aes(x = fips, y = sums, fill = year), position = "dodge") +
ggtitle("Emission of PM2.5 in Baltimore and LA") + xlab("Year") + ylab("Emission [t]")
dev.off()
# plot3
baltimore_types <- NEI %>%
filter(fips == 24510) %>%
mutate(year = factor(year)) %>%
group_by(year, type) %>%
summarise(sums = sum(Emissions))
ggplot(baltimore_types) + geom_col(aes(x = type, y = sums, fill = year), position = "dodge") +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types) + geom_col(aes(x = year, y = sums, fill = type), position = "dodge") +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types) + geom_line(aes(x = year, y = sums, fill = type), position = "dodge") +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types) + geom_line(aes(x = year, y = sums, coll = type)) +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types) + geom_line(aes(x = year, y = sums, col = type)) +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types) + geom_line(aes(x = year, y = sums, col = type), group = 1) +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types) + geom_line(aes(x = year, y = sums, col = type, group = 1)) +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types) + geom_point(aes(x = year, y = sums, col = type)) +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types) + geom_point(aes(x = year, y = sums, col = type)) + geom_line() +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types) + geom_point(aes(x = year, y = sums, col = type)) + geom_line(aes(group = 1)) +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types, aes(x = year, y = sums, col = type)) + geom_point() + geom_line(aes(group = 1)) +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types, aes(x = year, y = sums, col = type)) + geom_point() + geom_line(aes(group = type)) +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
ggplot(baltimore_types, aes(x = year, y = sums, col = type)) + geom_point() + geom_line(aes(group = type), lwd = 1) +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
# plot3
baltimore_types <- NEI %>%
filter(fips == 24510) %>%
mutate(year = factor(year)) %>%
group_by(year, type) %>%
summarise(sums = sum(Emissions))
png("plot3.png")
ggplot(baltimore_types, aes(x = year, y = sums, col = type)) + geom_point() + geom_line(aes(group = type), lwd = 1) +
ggtitle("Emission of PM2.5 in Baltimore per type of source") + xlab("Source type") + ylab("Emission")
dev.off()
